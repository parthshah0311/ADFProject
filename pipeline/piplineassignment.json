{
	"name": "piplineassignment",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_salesexcel",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 2
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@startswith(item().name, 'sales')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"description": "",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(length(activity('Filter1').output.Value), 0)\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Append variable1",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Filecheck",
								"value": "Not found"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Append variable2",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Filecheckname",
								"value": "File exist"
							}
						}
					]
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ExcelSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@item().name",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": true,
										"keys": [
											"CustomerId"
										]
									},
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "Customer_ID",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "CustomerId",
												"type": "Int32",
												"physicalType": "int"
											}
										},
										{
											"source": {
												"name": "Customer_Name",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "CustomerName",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Date",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "Date",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Product",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "Product",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Quantity",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "Quantity",
												"type": "Int32",
												"physicalType": "int"
											}
										},
										{
											"source": {
												"name": "Sales_Amount",
												"type": "String",
												"physicalType": "String"
											},
											"sink": {
												"name": "SalesAmt",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 2,
												"precision": 10
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_salesexcel",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_salesdatasql",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"Filecheck": {
				"type": "Array"
			},
			"Filecheckname": {
				"type": "Array"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-02-14T19:15:08Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}